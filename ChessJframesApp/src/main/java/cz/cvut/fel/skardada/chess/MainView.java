/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.cvut.fel.skardada.chess;

/**
 *
 * @author Adam Å karda
 */
public class MainView extends javax.swing.JFrame {

    private String savePath;
    private String stylePath;
    private String p1time;
    private String p2time;
    private String p1incrementTime;
    private String p2incrementTime;
    private boolean sameTime;
    private PlayerColors p1color;
    private PlayerColors p2color;
    private PossibleOpponents p1Type;
    private PossibleOpponents p2Type;
    private String p1name;
    private String p2name;
    public boolean ready = false;
    /**
     * Creates new form mainView
     */
    public MainView() {
        //temp
        stylePath= ".\\src\\main\\java\\cz\\cvut\\fel\\skardada\\chess\\ChessStyles\\style_chibi.ser";
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        p1TimeButtonGroup = new javax.swing.ButtonGroup();
        p2TimeButtonGroup = new javax.swing.ButtonGroup();
        playerColor = new javax.swing.ButtonGroup();
        p1TypeChooser = new javax.swing.JComboBox<>();
        p1NameChooser = new javax.swing.JTextField();
        p2NameChooser = new javax.swing.JTextField();
        p2TypeChooser = new javax.swing.JComboBox<>();
        startButton = new javax.swing.JButton();
        p1TimeRadioButtonSame = new javax.swing.JRadioButton();
        p1TimeRadioButtonDifferent = new javax.swing.JRadioButton();
        p2TimeRadioButtonSame = new javax.swing.JRadioButton();
        p2TimeRadioButtonDifferent = new javax.swing.JRadioButton();
        p1TimeChooser = new javax.swing.JTextField();
        p2TimeChooser = new javax.swing.JTextField();
        p2IncrementChooser = new javax.swing.JTextField();
        p1IncrementChooser = new javax.swing.JTextField();
        p1Color = new javax.swing.JRadioButton();
        p2Color = new javax.swing.JRadioButton();
        mainMenuBar = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        p1TypeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(PossibleOpponents.values()));
        p1TypeChooser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                p1TypeChooserItemStateChanged(evt);
            }
        });

        p1NameChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p1NameChooser.setText("Player 1");

        p2NameChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p2NameChooser.setText("Player 2");

        p2TypeChooser.setModel(new javax.swing.DefaultComboBoxModel<>(PossibleOpponents.values()));
        p2TypeChooser.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                p2TypeChooserItemStateChanged(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        p1TimeButtonGroup.add(p1TimeRadioButtonSame);
        p1TimeRadioButtonSame.setSelected(true);
        p1TimeRadioButtonSame.setText("Same time as opponent");

        p1TimeButtonGroup.add(p1TimeRadioButtonDifferent);
        p1TimeRadioButtonDifferent.setText("Different time than opponent");

        p2TimeButtonGroup.add(p2TimeRadioButtonSame);
        p2TimeRadioButtonSame.setSelected(true);
        p2TimeRadioButtonSame.setText("Same time as opponent");
        p2TimeRadioButtonSame.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p2TimeRadioButtonSame.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        p2TimeButtonGroup.add(p2TimeRadioButtonDifferent);
        p2TimeRadioButtonDifferent.setText("Different time than opponent");
        p2TimeRadioButtonDifferent.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        p1TimeChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p1TimeChooser.setText("00:10:00");
        p1TimeChooser.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                p1TimeChooserPropertyChange(evt);
            }
        });

        p2TimeChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p2TimeChooser.setText("00:10:00");

        p2IncrementChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p2IncrementChooser.setText("00:00:05");

        p1IncrementChooser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        p1IncrementChooser.setText("00:00:05");

        playerColor.add(p1Color);
        p1Color.setSelected(true);
        p1Color.setText(PlayerColors.white.toString());

        playerColor.add(p2Color);
        p2Color.setText(PlayerColors.white.toString());
        p2Color.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p2Color.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jMenu1.setText("File");
        mainMenuBar.add(jMenu1);

        jMenu2.setText("Edit");
        mainMenuBar.add(jMenu2);

        setJMenuBar(mainMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(p1TimeRadioButtonDifferent, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(p1TimeRadioButtonSame, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p1TimeChooser, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p1TypeChooser, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(p1NameChooser, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p1IncrementChooser, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p1Color, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 316, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(p2TimeRadioButtonSame, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(p2NameChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(p2TypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(p2TimeRadioButtonDifferent, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(p2TimeChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(p2IncrementChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(p2Color, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(150, 150, 150))
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1NameChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2NameChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1TypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(p2TypeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(p1Color)
                    .addComponent(p2Color))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(p2TimeRadioButtonSame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(p2TimeRadioButtonDifferent)
                        .addGap(18, 18, 18)
                        .addComponent(p2TimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(p2IncrementChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(p1TimeRadioButtonSame)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(p1TimeRadioButtonDifferent)
                        .addGap(18, 18, 18)
                        .addComponent(p1TimeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(p1IncrementChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        boolean noErrors = true;
        //TODO set game style path
        
        //TODO set game save path

        //TODO sort THIS code to validate functions of elements
        
        //set Player Names
        //Player 1
        String errorPrompt = "Give me your Name!";
        if(p1NameChooser.getText() == null || p1NameChooser.getText().equals("") || p1NameChooser.getText().equals(errorPrompt)){
            p1NameChooser.setText(errorPrompt);
            noErrors = false;
        }
        else{
           this.p1name = p1NameChooser.getText(); 
        }
        
        //Player 2
        if(p2NameChooser.getText() == null || p2NameChooser.getText().equals("") || p2NameChooser.getText().equals(errorPrompt)){
            p2NameChooser.setText(errorPrompt);
            noErrors = false;
        }
        else{
            this.p2name = p2NameChooser.getText();
        }
        
        
        //set Player Types
        if(p1TypeChooser.getSelectedItem() == p2TypeChooser.getSelectedItem() && p1TypeChooser.getSelectedItem() == PossibleOpponents.internet){
            noErrors = false;
        }
        else{
            this.p1Type = (PossibleOpponents) p1TypeChooser.getSelectedItem();
            this.p2Type = (PossibleOpponents) p2TypeChooser.getSelectedItem(); 
        }
        
        //set Player Colors
        if(p1Color.isSelected()){
            p1color = PlayerColors.white;
            p2color = PlayerColors.black;
        }
        else{
            p1color = PlayerColors.black;
            p2color = PlayerColors.white;
        }
        
        //set Player Time
        
        if(p1TimeRadioButtonSame.isSelected()){
            p1TimeChooser.setText(p2TimeChooser.getText());
        }
        if(p2TimeRadioButtonSame.isSelected()){
            p2TimeChooser.setText(p1TimeChooser.getText());
        }
        
        // Player 1
        int timeStringPartNumber = 3;
        String timeErrorMsg = "hh:mm:ss";
        if(p1TimeChooser.getText().equals("")){
            p1TimeChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        String[] timeInfo = p1TimeChooser.getText().split(":");
        if(timeInfo.length != timeStringPartNumber){
            p1TimeChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        else{
            for(String info : timeInfo){
                try{
                    Integer.parseInt(info);
                }
                catch(NumberFormatException ex){
                    p1TimeChooser.setText(timeErrorMsg);
                    noErrors = false;
                }
            }
            p1time = p1TimeChooser.getText();
        }
        
        // Player 2
        if(p2TimeChooser.getText().equals("")){
            p2TimeChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        timeInfo = p2TimeChooser.getText().split(":");
        if(timeInfo.length != timeStringPartNumber){
            p2TimeChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        else{
            for(String info : timeInfo){
                try{
                    Integer.parseInt(info);
                }
                catch(NumberFormatException ex){
                    p2TimeChooser.setText(timeErrorMsg);
                    noErrors = false;
                }
            }
            p2time = p2TimeChooser.getText();
        }
        
        //set Player increment
        //Player 1
        if(p1IncrementChooser.getText().equals("")){
            p1IncrementChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        String[] incrementInfo = p1IncrementChooser.getText().split(":");
        if(incrementInfo.length != timeStringPartNumber){
            p1IncrementChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        else{
            for(String info : timeInfo){
                try{
                    Integer.parseInt(info);
                }
                catch(NumberFormatException ex){
                    p1IncrementChooser.setText(timeErrorMsg);
                    noErrors = false;
                }
            }
            p1incrementTime = p1IncrementChooser.getText();
        }
        //Player 2
        if(p2IncrementChooser.getText().equals("")){
            p2IncrementChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        incrementInfo = p2IncrementChooser.getText().split(":");
        if(incrementInfo.length != timeStringPartNumber){
            p2IncrementChooser.setText(timeErrorMsg);
            noErrors = false;
        }
        else{
            for(String info : timeInfo){
                try{
                    Integer.parseInt(info);
                }
                catch(NumberFormatException ex){
                    p2IncrementChooser.setText(timeErrorMsg);
                    noErrors = false;
                }
            }
            p2incrementTime = p2IncrementChooser.getText();
        }
        //set ready flag for controller
        if (noErrors) {
           this.ready = true; 
        }
        else{
            this.ready = false;
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void p2TypeChooserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_p2TypeChooserItemStateChanged

    }//GEN-LAST:event_p2TypeChooserItemStateChanged

    private void p1TypeChooserItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_p1TypeChooserItemStateChanged

    }//GEN-LAST:event_p1TypeChooserItemStateChanged

    private void p1TimeChooserPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_p1TimeChooserPropertyChange

    }//GEN-LAST:event_p1TimeChooserPropertyChange

    public String getSavePath() {
        return savePath;
    }

    public String getStylePath() {
        return stylePath;
    }

    public String getP1time() {
        return p1time;
    }

    public String getP2time() {
        return p2time;
    }

    public String getP1name() {
        return p1name;
    }

    public String getP1incrementTime() {
        return p1incrementTime;
    }

    public String getP2incrementTime() {
        return p2incrementTime;
    }

    public PlayerColors getP1color() {
        return p1color;
    }

    public PlayerColors getP2color() {
        return p2color;
    }

    public PossibleOpponents getP1Type() {
        return p1Type;
    }

    public PossibleOpponents getP2Type() {
        return p2Type;
    }

    public String getP2name() {
        return p2name;
    }

    public boolean isReady() {
        return ready;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar mainMenuBar;
    private javax.swing.JRadioButton p1Color;
    private javax.swing.JTextField p1IncrementChooser;
    private javax.swing.JTextField p1NameChooser;
    private javax.swing.ButtonGroup p1TimeButtonGroup;
    private javax.swing.JTextField p1TimeChooser;
    private javax.swing.JRadioButton p1TimeRadioButtonDifferent;
    private javax.swing.JRadioButton p1TimeRadioButtonSame;
    private javax.swing.JComboBox<PossibleOpponents> p1TypeChooser;
    private javax.swing.JRadioButton p2Color;
    private javax.swing.JTextField p2IncrementChooser;
    private javax.swing.JTextField p2NameChooser;
    private javax.swing.ButtonGroup p2TimeButtonGroup;
    private javax.swing.JTextField p2TimeChooser;
    private javax.swing.JRadioButton p2TimeRadioButtonDifferent;
    private javax.swing.JRadioButton p2TimeRadioButtonSame;
    private javax.swing.JComboBox<PossibleOpponents> p2TypeChooser;
    private javax.swing.ButtonGroup playerColor;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
